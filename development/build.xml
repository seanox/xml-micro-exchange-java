<?xml version="1.0" ?>
<project name="xmex" default="usage" basedir="..">
  <target name="usage">
    <echo>Following targets are available:                               </echo>
    <echo>                                                               </echo>
    <echo>  changes    Synchronizes README.md with CHANGES               </echo>
    <echo>                                                               </echo>
    <echo>  compile    Builds the jar files                              </echo>
    <echo>                                                               </echo>
    <echo>  test       Builds the jar files                              </echo>
    <echo>             Runs the tests                                    </echo>
    <echo>                                                               </echo>
    <echo>  release    Builds the complete release                       </echo>
    <echo>             Synchronizes the version in README.md             </echo>
    <echo>                                                               </echo>
    <echo>  publish    Builds the complete release                       </echo>
    <echo>             Synchronizes the version in README.md             </echo>
    <echo>             Publishes the version to the Maven repository     </echo>
  </target>

  <property name="workspace" value="${basedir}"/>
  <property name="workspace.sources" value="${workspace}/src"/>
  <property name="workspace.sources.filter" value="**/*.java,**/pom.xml"/>
  <property name="workspace.development" value="${workspace}/development"/>
  <property name="workspace.target" value="${workspace}/target"/>

  <macrodef name="release-info-locate">
    <sequential>
      <copy file="${workspace}/CHANGES" tofile="${workspace}/CHANGES.tmp" overwrite="true"/>
      <replaceregexp file="${workspace}/CHANGES.tmp"
          match="(?s)^\s*([\d\.x]+) (\d{4})([\dx]+).*$" flags="g" byline="false"
          replace="release.version=\1&#x000D;release.year=\2&#x000D;release.date=\2\3&#x000D;"/>
      <replaceregexp file="${workspace}/CHANGES.tmp" match="x" replace="0" flags="g" byline="false"/>
      <loadproperties srcfile="${workspace}/CHANGES.tmp"/>
      <delete file="${workspace}/CHANGES.tmp"/>
      <echo file="${workspace}/CHANGES.tmp" message="release.major=${release.version}"/>
      <replaceregexp file="${workspace}/CHANGES.tmp"
          match="(?&lt;=\d+)\." byline="true" replace="&#x000D;release.minor="/>
      <replaceregexp file="${workspace}/CHANGES.tmp"
          match="(?&lt;=\d+)\." byline="true" replace="&#x000D;release.patch="/>
      <loadproperties srcfile="${workspace}/CHANGES.tmp"/>
      <delete file="${workspace}/CHANGES.tmp"/>
    </sequential>
  </macrodef>

  <macrodef name="release-info-reset">
    <sequential>
      <release-info-insert version="0.0.0 00000000"/>
    </sequential>
  </macrodef>

  <macrodef name="release-info-insert">
    <attribute name="version" default="${release.version} ${release.date}"/>
    <sequential>
      <echo file="release-info.tmp" message="@{version}"/>
      <replaceregexp file="release-info.tmp" match="[^\d\.\s]" replace="0" flags="g"/>
      <replaceregexp file="release-info.tmp" match="^([^\s]+)\s+(\d{4})(\d{4})"
          replace="release.info.version=\1&#x000D;release.info.year=\2&#x000D;release.info.date=\2\3&#x000D;"/>
      <local name="release.info.version"/>
      <local name="release.info.year"/>
      <local name="release.info.date"/>
      <loadproperties srcfile="release-info.tmp"/>
      <delete file="release-info.tmp"/>
      <replaceregexp match="(?&lt;!\*\s+)(Copyright\s+[^\s]+)\s+\d+" replace="\1 ${release.info.year}">
        <fileset dir="${workspace}" includes="${workspace.sources.filter}"/>
      </replaceregexp>
      <replaceregexp match="(Version) \d+(?:\.\d+)+ \d+" replace="\1 ${release.info.version} ${release.info.date}">
        <fileset dir="${workspace}" includes="${workspace.sources.filter}"/>
      </replaceregexp>
      <replaceregexp match="(?si)(&lt;artifactId&gt;seanox-${ant.project.name}\b.*?&lt;version&gt;)\d[\d\.]+(&lt;/version&gt;)"
          replace="\1${release.info.version}\2" flags="g" byline="false">
        <fileset dir="${workspace}" includes="${workspace.sources.filter}"/>
      </replaceregexp>
    </sequential>
  </macrodef>

  <macrodef name="cmd">
    <attribute name="command"/>
    <sequential>
      <exec executable="cmd" failonerror="true">
        <arg value="/c"/>
        <arg value="@{command}"/>
      </exec>
    </sequential>
  </macrodef>

  <target name="changes">
    <release-info-locate/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00E4;" replace="ae" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00C4;" replace="Ae" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00F6;" replace="oe" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00D6;" replace="Oe" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00FC;" replace="ue" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="&#x00DC;" replace="Ue" flags="g"/>
    <replaceregexp file="${workspace}/CHANGES" match="\s+$" replace="" flags="g" byline="true"/>

    <copy file="${workspace}/CHANGES" tofile="${workspace}/CHANGES.tmp" overwrite="true"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="^\s+" replace="" byline="false"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="(?s)^(.*?)[\r\n]+\d[\d\. x]+.*$" replace="\1" byline="false"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="^(.*?)\s*$" replace="\1  " flags="g" byline="true"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="^(\d[\.\d x]+)[^\r\n]*" replace="## \1" byline="false"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="^ {0,4}([A-Z]+:.*)\s*$" replace="\1" byline="true"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="(?s)[\r\n]+ [^\r\n]+" replace="" flags="g" byline="false"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="^(## \d[\.\d]+ \d+)(  )" replace="\1\2" flags="g" byline="true"/>
    <replaceregexp file="${workspace}/CHANGES.tmp" match="^(## \d[\.\d]+ \d+x+)(  )" replace="\1 (upcoming version)\2" flags="g" byline="true"/>
    <loadresource property="changes">
      <file file="${workspace}/CHANGES.tmp"/>
    </loadresource>
    <delete file="${workspace}/CHANGES.tmp"/>
    <replaceregexp file="${workspace}/README.md"
        match="(?si)(# Changes\s+).*?(\[Read more\])" flags="g" byline="false"
        replace="\1${changes}${line.separator}${line.separator}\2"/>
    <tstamp>
      <format property="now.year" pattern="yyyy"/>
    </tstamp>
    <replaceregexp file="${workspace}/README.md"
        match="(?si)(?&lt;=\(C\)\s)\d{4}\b" flags="g" byline="true"
        replace="${now.year}"/>
  </target>

  <target name="compile">
    <release-info-locate/>
    <cmd command="mvn clean -DskipTests"/>
    <release-info-insert version="${release.info.version} ${release.date}"/>
    <cmd command="mvn package -DskipTests"/>
    <release-info-reset/>
  </target>

  <target name="test">
    <release-info-locate/>
    <release-info-insert version="${release.info.version} ${release.date}"/>
    <cmd command="mvn clean test"/>
    <release-info-reset/>
  </target>

  <target name="release" depends="changes">
    <release-info-locate/>
    <antcall target="test"/>
    <replaceregexp file="${workspace}/README.md"
        match="(?si)(&lt;version&gt;\s*\d+)[\.\d\s]+(&lt;/version&gt;)" flags="g" byline="true"
        replace="\1.${release.minor}.${release.patch}\2"/>
    <replaceregexp file="${workspace}/README.md"
        match="(?si)(&lt;artifactId&gt;seanox-${ant.project.name}\b.*?&lt;version&gt;\d+)[\d\.]+(&lt;/version&gt;)"
        replace="\1.${release.minor}.${release.patch}\2" flags="g" byline="false"/>
    <replaceregexp file="${workspace}/README.md"
        match="(seanox-${ant.project.name}/\d+)\.\d[\d\.]+"
        replace="\1.${release.minor}.${release.patch}" flags="g" byline="false"/>
    <replaceregexp file="${workspace}/manual/getting-started.md"
        match="(?si)(&lt;artifactId&gt;seanox-${ant.project.name}\b.*?&lt;version&gt;\d+)[\d\.]+(&lt;/version&gt;)"
        replace="\1.${release.minor}.${release.patch}\2" flags="g" byline="false"/>
    <release-info-reset/>
  </target>

  <target name="publish" depends="release">
    <release-info-locate/>
    <release-info-insert version="${release.info.version} ${release.date}"/>
    <cmd command="mvn clean deploy -DskipTests"/>
    <release-info-reset/>
  </target>
</project>